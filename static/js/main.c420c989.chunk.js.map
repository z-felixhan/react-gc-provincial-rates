{"version":3,"sources":["components/Utility.js","App.js","index.js"],"names":["initial","AB","onHoverColor","BC","MB","NB","NL","NS","NT","NU","ON","PE","QC","SK","YT","App","useState","loading","setLoading","display","setDisplay","rates","setRates","rate","setRate","province","setProvince","customization","setCustomization","fetchData","url","a","fetch","method","response","json","data","console","log","getRate","pairList","GstRateProvinceList","filter","ProvinceCode","GstRateDatePairList","pair","ExpiryDate","useEffect","className","CircularProgress","color","Canada","fillColor","height","customize","onClick","toUpperCase","getProvinceName","selectedColor","slice","onMouseDown","onHover","Card","sx","minWidth","CardContent","Typography","GstRate","EffectiveDate","style","margin","padding","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c420c989.chunk.js","sourcesContent":["export const initial = {\n  AB: {\n    onHoverColor: \"#23427fbb\",\n  },\n  BC: {\n    onHoverColor: \"#c2b2b2bb\",\n  },\n  MB: {\n    onHoverColor: \"#239b56bb\",\n  },\n  NB: {\n    onHoverColor: \"#ff5733bb\",\n  },\n  NL: {\n    onHoverColor: \"#7986cbbb\",\n  },\n  NS: {\n    onHoverColor: \"#b71c1cbb\",\n  },\n  NT: {\n    onHoverColor: \"#ff80edbb\",\n  },\n  NU: {\n    onHoverColor: \"#f7347abb\",\n  },\n  ON: {\n    onHoverColor: \"#f4d03fbb\",\n  },\n  PE: {\n    onHoverColor: \"#00c853bb\",\n  },\n  QC: {\n    onHoverColor: \"#85c1e9bb\",\n  },\n  SK: {\n    onHoverColor: \"#ff9800bb\",\n  },\n  YT: {\n    onHoverColor: \"#7e51a5bb\",\n  },\n};\n\n// Return the province name given the abbreviation\nexport const getProvinceName = (province) => {\n  if (province.toUpperCase() === \"AB\") {\n    return \"Alberta\";\n  } else if (province.toUpperCase() === \"BC\") {\n    return \"British Columbia\";\n  } else if (province.toUpperCase() === \"MB\") {\n    return \"Manitoba\";\n  } else if (province.toUpperCase() === \"NB\") {\n    return \"New Brunswick\";\n  } else if (province.toUpperCase() === \"NL\") {\n    return \"Newfoundland and Labrador\";\n  } else if (province.toUpperCase() === \"NS\") {\n    return \"Nova Scotia\";\n  } else if (province.toUpperCase() === \"NT\") {\n    return \"Northwest Territories\";\n  } else if (province.toUpperCase() === \"NU\") {\n    return \"Nunavut\";\n  } else if (province.toUpperCase() === \"ON\") {\n    return \"Ontario\";\n  } else if (province.toUpperCase() === \"PE\") {\n    return \"Prince Edward Island\";\n  } else if (province.toUpperCase() === \"QC\") {\n    return \"Quebec\";\n  } else if (province.toUpperCase() === \"SK\") {\n    return \"Saskatchewan\";\n  } else if (province.toUpperCase() === \"YT\") {\n    return \"Yukon\";\n  }\n};\n","import \"./App.css\";\nimport { Card, CardContent, CircularProgress, Typography } from \"@mui/material\";\nimport { getProvinceName, initial } from \"./components/Utility\";\nimport { useEffect, useState } from \"react\";\nimport CanadaMap from \"react-canada-map\";\n\nfunction App() {\n  const url = \"https://orient.onrender.com/gc/gstrate\";\n  const [loading, setLoading] = useState(true);\n  const [display, setDisplay] = useState(false);\n  const [rates, setRates] = useState([]);\n  const [rate, setRate] = useState([]);\n  const [province, setProvince] = useState([]);\n  const [customization, setCustomization] = useState(() => initial);\n\n  const mapClickHandler = (province) => {\n    setRate(getRate(province));\n    setProvince(getProvinceName(province));\n    setCustomization(() => {\n      const selectedColor = [initial[province]][0].onHoverColor.slice(0, -2);\n\n      return {\n        ...initial,\n        [province]: {\n          // ...[initial[province]][0],\n          onHoverColor: selectedColor,\n          fillColor: selectedColor,\n        },\n      };\n    });\n    setDisplay(true);\n  };\n\n  // Fetch and store data for GST/HST provincial rates\n  const fetchData = async (url) => {\n    try {\n      const response = await fetch(url, { method: \"GET\" });\n      const data = await response.json();\n\n      setRates(data);\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Return the rate for the specific province\n  const getRate = (province) => {\n    const pairList = rates.GstRateProvinceList.filter(\n      (rate) => rate.ProvinceCode === province\n    );\n\n    const rate = pairList[0].GstRateDatePairList.filter(\n      (pair) => !pair.ExpiryDate\n    );\n\n    return rate[0];\n  };\n\n  useEffect(() => {\n    fetchData(url);\n  }, []);\n\n  return (\n    <div className=\"container\">\n      {loading ? (\n        <CircularProgress color=\"inherit\" />\n      ) : (\n        <>\n          <div className=\"map-container\">\n            <div className=\"map-container-inner\">\n              <CanadaMap className=\"map\" fillColor=\"white\" height=\"100%\" />\n            </div>\n            <div className=\"map-container-inner\">\n              <CanadaMap\n                className=\"map\"\n                customize={customization}\n                fillColor=\"lightgrey\"\n                onClick={mapClickHandler}\n                onMouseDown={() => console.log(\"Hi\")}\n                onHover=\"Gold\"\n                height=\"100%\"\n              />\n            </div>\n          </div>\n          {display && (\n            <Card className=\"rate-card\" sx={{ minWidth: 275 }}>\n              <CardContent>\n                <Typography className=\"province\">{province}</Typography>\n                <Typography className=\"rate\">{rate.GstRate * 100}%</Typography>\n                <Typography className=\"effective-date\">\n                  Effective: {rate.EffectiveDate}\n                </Typography>\n              </CardContent>\n            </Card>\n          )}\n          <Card className=\"title-card\">\n            <CardContent style={{ margin: 0, padding: 10 }}>\n              <Typography className=\"title\">\n                GST/HST Provincial Rates\n              </Typography>\n            </CardContent>\n          </Card>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}